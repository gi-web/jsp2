/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2021-01-12 05:30:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.netpidia;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import netpidia.NetBoardBean;
import java.util.Vector;
import netpidia.UtilMgr;

public final class review_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/netpidia/treview.jsp", Long.valueOf(1610429406957L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("netpidia.NetBoardBean");
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("netpidia.UtilMgr");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("EUC-KR");

      out.write('\r');
      out.write('\n');
      netpidia.NetBoardMgr mgr = null;
      mgr = (netpidia.NetBoardMgr) _jspx_page_context.getAttribute("mgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (mgr == null){
        mgr = new netpidia.NetBoardMgr();
        _jspx_page_context.setAttribute("mgr", mgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      netpidia.NetBCommentMgr cmgr = null;
      cmgr = (netpidia.NetBCommentMgr) _jspx_page_context.getAttribute("cmgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (cmgr == null){
        cmgr = new netpidia.NetBCommentMgr();
        _jspx_page_context.setAttribute("cmgr", cmgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("EUC-KR");
int totalRecord = 0;//총게시물수
int numPerPage = 15;//페이지당 레코드 개수(5,10,15,30)  (게시물 수)
int pagePerBlock = 10;//블럭당 페이지 개수
int totalPage = 0;//총 페이지 개수
int totalBlock = 0;// 총 블럭 개수
int nowPage = 1;//현재 페이지    게시물클릭 리스트로가면 들어갔던 페이지로
int nowBlock = 1;//현재 블럭

//요청된 numPerPage 처리
if (request.getParameter("numPerPage") != null) {
	//Integer.parseInt(request.getParameter(name));
	numPerPage = UtilMgr.parseInt(request, "numPerPage");
}

//검색에 필요한 변수
String keyField = "", keyWord = "";
if (request.getParameter("keyWord") != null) {
	keyField = request.getParameter("keyField");
	keyWord = request.getParameter("keyWord");
}

//검색 후에 다시 처음 리스트 요청(!= 널이아님 요청을 했다는뜻)
if (request.getParameter("reload") != null && request.getParameter("reload").equals("true")) {
	keyField = "";
	keyWord = "";
}

totalRecord = mgr.getTotalCount(keyField, keyWord);
//out.print(totalRecord);
if (request.getParameter("nowPage") != null) {
	nowPage = UtilMgr.parseInt(request, "nowPage");
}

//sql문에 들어가는 start, cnt 선언
int start = (nowPage * numPerPage) - numPerPage;
int cnt = numPerPage;

//전체페이지 개수   ceil이(올림)메소드
totalPage = (int) Math.ceil((double) totalRecord / numPerPage);
//전체블럭 개수
totalBlock = (int) Math.ceil((double) totalPage / pagePerBlock);
//현재블럭
nowBlock = (int) Math.ceil((double) nowPage / pagePerBlock);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>project</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css?after\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Bebas+Neue&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction check() {\r\n");
      out.write("\t\tif (document.searchFrm.keyWord.value == \"\") {\r\n");
      out.write("\t\t\talert(\"검색어를 입력하세요.\");\r\n");
      out.write("\t\t\tdocument.searchFrm.keyWord.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.searchFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction list() {\r\n");
      out.write("\t\tdocument.listFrm.action = \"review.jsp\";\r\n");
      out.write("\t\tdocument.listFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction numPerFn(numPerPage) {\r\n");
      out.write("\t\t//alert(numPerPage);\r\n");
      out.write("\t\tdocument.readFrm.numPerPage.value = numPerPage;\r\n");
      out.write("\t\tdocument.readFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction pageing(page) {\r\n");
      out.write("\t\tdocument.readFrm.nowPage.value = page;\r\n");
      out.write("\t\tdocument.readFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction block(block) {\r\n");
      out.write("\t\tdocument.readFrm.nowPage.value =\r\n");
      out.print(pagePerBlock);
      out.write("\r\n");
      out.write("\t* (block - 1) + 1;\r\n");
      out.write("\t\tdocument.readFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction read(num) {\r\n");
      out.write("\t\tdocument.readFrm.num.value = num;\r\n");
      out.write("\t\tdocument.readFrm.action = \"read.jsp\";\r\n");
      out.write("\t\tdocument.readFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body align=\"center\">\r\n");
      out.write("\t");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>project</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Bebas+Neue&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");

	String idk = (String)session.getAttribute("idKey");
	
	String log="";
	if(idk == null) log ="<a href=login3.jsp>LOGIN</a>";
	else log = "<a href=logout.jsp>LOGOUT</a>";

	String reg="";
	if(idk == null) reg ="<a href=join.jsp>SIGNUP</a>";
	else reg = "<a href=update.jsp>UPDATE</a>";

      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<input type=\"checkbox\" id=\"chk1\">\r\n");
      out.write("\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t<img src=\"./image/netpidia.png\" style=\"float: left; margin-top: 10px; margin-left:70px; width: 200px; height: 60px;\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><a href=\"index.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">Movies</a></li>\r\n");
      out.write("\t\t\t<li class=\"active\"><a href=\"review.jsp\">Review</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">My favorite</a></li>\r\n");
      out.write("\t\t\t<li>");
      out.print(log);
      out.write("<li>\r\n");
      out.write("\t\t\t<li>");
      out.print(reg);
      out.write("</li>\t\t\t\r\n");
      out.write("\t\t\t<label for=\"chk1\" class=\"menu-close\">\r\n");
      out.write("\t\t\t\t<i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n");
      out.write("\t\t\t</label>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<div class=\"search\">\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"search\" id=\"srch\" style=\"font-family:ëì\"\r\n");
      out.write("\t\t\trequired placeholder=\"Enter your search\">\r\n");
      out.write("\t\t\t<button type =\"submit\">Search</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<label for=\"chk1\" class=\"menu-open\">\r\n");
      out.write("\t\t\t<i class = \"fa fa-bars\" aria-hidden =\"true\"></i>\r\n");
      out.write("\t\t</label>\r\n");
      out.write("\t</header>");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<table class=\"table table-dark\"\r\n");
      out.write("\t\t\t\tstyle=\"margin-left: auto; margin-right: auto;\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\" colspan=\"2\" style=\"font-family:돋움\">\r\n");
      out.write("\t\t\t\t\t\t");

							Vector<NetBoardBean> vlist = mgr.getNetBoardList(keyField, keyWord, start, cnt);
						//브라우저 화면에 표시될 게시물 번호, 마지막 페이지에는 10개 이하의 개수 리턴 될수 있다.
						int listSize = vlist.size();
						if (vlist.isEmpty()) {
							out.println("등록된 게시물이 없습니다.");
						} else {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<table cellspacing=\"0\" class=\"table table-dark table-hover\" >\r\n");
      out.write("\t\t\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td width=\"100\" style=\"font-family:돋움\">번호</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td width=\"500\" style=\"font-family:돋움\">제목</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td width=\"100\" style=\"font-family:돋움\">작성자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td width=\"150\" style=\"font-family:돋움\">날짜</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td width=\"100\" style=\"font-family:돋움\">조회수</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 0; i < numPerPage/*10*/; i++) {
								if (i == listSize)
									break;
								NetBoardBean bean = vlist.get(i);
								int num = bean.getNum();//게시물 번호
								String subject = bean.getSubject();//제목
								String name = bean.getId();//이름
								String regdate = bean.getRegdate();//날짜
								int count = bean.getCount();//조회수
								String filename = bean.getImage();//이미지파일
								//댓글 count
								int bcount = cmgr.getNetBCommentCount(num);
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr align=\"center\" style=\"color: white\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(totalRecord - start - i);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td align=\"left\"><a style=\"color: white; font-family:돋움\" href=\"javascript:read('");
      out.print(num);
      out.write("')\">");
      out.print(subject);
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");

										if (filename != null && !filename.equals("")) {
									
      out.write(" <img src=\"img/icon_file.gif\" align=\"middle\"> ");

 	}
 
      out.write(' ');

 	if (bcount > 0) {
 
      out.write(" <font color=\"red\">(");
      out.print(bcount);
      out.write(")\r\n");
      out.write("\t\t\t\t\t\t\t\t</font> ");

 	}
 
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=\"#\" class=\"member\" onclick=\"return false\">");
      out.print(name);
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(regdate);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(count);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} //---for
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</table> ");

 	} //---if-else
 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\"><br> <br></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"padding-left:130px\" width=90%;>\r\n");
      out.write("\t\t\t\t\t\t<!-- 페이징 및 블럭 Start --> <!-- 이전블럭 --> ");

 	if (nowBlock > 1) {
 
      out.write(" <a href=\"javascript:block('");
      out.print(nowBlock - 1);
      out.write("')\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"btn btn-outline-light\"><</a> ");

 	}
 
      out.write(" <!-- 페이징 --> ");

 	int pageStart = (nowBlock - 1) * pagePerBlock + 1;
 int pageEnd = (pageStart + pagePerBlock/*15*/) <= totalPage ? pageStart + pagePerBlock : totalPage + 1;//true앞:fals 뒤
 for (; pageStart < pageEnd; pageStart++) {
 
      out.write(" <a href=\"javascript:pageing('");
      out.print(pageStart);
      out.write("')\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"btn btn-outline-light\"> ");

 	if (nowPage == pageStart) {
 
      out.write("<font class=\"btn btn-secondary\"> ");

 	}
 
      out.write(" <!-- 현재 페이지 --> ");
      out.print(pageStart);
      out.write(' ');

 	if (nowPage == pageStart) {
 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</font> ");

 	}
 
      out.write(" <!-- 닫아줘야함 -->\r\n");
      out.write("\t\t\t\t\t</a> ");

 	} //--for
 
      out.write(" <!-- 다음블럭 --> ");

 	if (totalBlock > nowBlock) {
 
      out.write(" <a href=\"javascript:block('");
      out.print(nowBlock + 1);
      out.write("')\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"btn btn-outline-light\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"margin-left: auto; margin-right: auto;\">></a> ");

 	}
 
      out.write(" <!-- 페이징 및 블럭 End -->\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"right\"><a href=write.jsp\r\n");
      out.write("\t\t\t\t\t\tclass=\"btn btn-danger btn-sm\" style=\"font-weight: bold; font-family:돋움\">글쓰기</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("\t\t\t<form name=\"searchFrm\" style=\"margin-left: auto; margin-right: auto;\">\r\n");
      out.write("\t\t\t\t<!-- 검색 -->\r\n");
      out.write("\t\t\t\t<table style=\"margin-left: auto; margin-right: auto;\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" valign=\"bottom\"><select name=\"keyField\"\r\n");
      out.write("\t\t\t\t\t\t\tsize=\"1\" style=\"font-weight: bold; font-family:돋움\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"name\" style=\"font-weight: bold; font-family:돋움\">이 름</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- value 컬럼명과 무조건 일치해야함 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"subject\" style=\"font-weight: bold; font-family:돋움\">제 목</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"content\" style=\"font-weight: bold; font-family:돋움\">내 용</option>\r\n");
      out.write("\t\t\t\t\t\t</select> <input style=\"font-family:돋움\" size=\"16\" name=\"keyWord\"> <input style=\"font-weight: bold; font-family:돋움\" type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btn-danger btn-sm\" value=\"찾기\"\r\n");
      out.write("\t\t\t\t\t\t\tonClick=\"javascript:check()\"> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"nowPage\" value=\"1\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<form name=\"listFrm\" method=\"post\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"reload\" value=\"true\"> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"nowPage\" value=\"1\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form name=\"readFrm\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"nowPage\" value=\"");
      out.print(nowPage);
      out.write("\"> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"numPerPage\" value=\"");
      out.print(numPerPage);
      out.write("\"> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"keyField\" value=\"");
      out.print(keyField);
      out.write("\"> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"keyWord\" value=\"");
      out.print(keyWord);
      out.write("\"> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"num\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
