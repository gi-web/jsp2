/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2020-12-30 02:22:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.blog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Vector;

public final class blog_005fcjsgoddns_005fsetting3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Vector");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("EUC-KR");
      out.write('\r');
      out.write('\n');

		String id = "cjsgoddns";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"EUC-KR\">\r\n");
      out.write("\t<title>blog</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"./resources/css/blog_style.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" charset=\"EUC-KR\" src=\"./resources/js/script.js\">\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"root\">\r\n");
      out.write("\t\t<div id=\"overlay\" style=\"background-image: url('./resources/img/tutorImg.png');\">\r\n");
      out.write("\t\t\t<button class=\"overlayButton\" onclick=\"overlaySleep()\">알겠다</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"blog-navBarWrap\">\r\n");
      out.write("\t\t\t<div class=\"blog-navbar\">\r\n");
      out.write("\t\t\t\t<div class=\"blog-navbar-left\">\r\n");
      out.write("\t\t\t\t\t<a href=\"../chu/index.jsp\" style=\"width: 81px; height: 26px; margin-left: 18%;\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"./resources/img/logo-md.png\" alt=\"img\">\r\n");
      out.write("\t\t\t\t\t</a> \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"blog-navbar-right\">\r\n");
      out.write("\t\t\t\t\t<select>\r\n");
      out.write("\t\t\t\t\t\t<option>이웃블로그\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<div><a href=\"../joon/logout.jsp\">로그아웃</a></div> \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form name=\"updateFrm\" action=\"blog_settingProc.jsp\" method=\"post\" enctype=\"multipart/form-data\" accept-charset=\"euc-kr\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"mainImgWrap\" style=\"border: 5px solid yellow;\">\r\n");
      out.write("\t\t\t<div style=\"height: 100%;\">\r\n");
      out.write("\t\t\t\t<input type=\"file\" name=\"bannerImg\" class=\"bannerChange\" style=\"background-image: url('./resources/img/");
      out.print("aaa" );
      out.write("'); background-size: 100% 100%;\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"container\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<div class=\"blog-conLeft\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"blog-profileWrap\">\r\n");
      out.write("\t\t\t\t\t<div class=\"blog-profileImg\" style=\"border: 5px solid yellow;\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 100%; height: 100%;\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"file\" name=\"profileImg\" class=\"profileImgChange\" style=\"background-image: url('./resources/img/");
      out.print("aaa" );
      out.write("'); background-size: 100% 100%;\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"blog-profileId\">\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<span style=\"opacity: 0.5\">");
      out.print(id );
      out.write("님의 블로그</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"blog-profileDesc\"  style=\"border: 5px solid yellow;\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 100%; height: 100%;\">\r\n");
      out.write("\t\t\t\t\t\t\t<textarea name=\"profileDesc\" class=\"descChange\" placeholder=\"");
      out.print("aaa" );
      out.write("\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
if(id!=null&&!id.equals("")){ 
      out.write("\r\n");
      out.write("\t\t\t\t<div style=\"margin-top: 5px;\">\r\n");
      out.write("\t\t\t\t\t<span style=\"opacity: 0.5\">글쓰기<small style=\"padding: 5px;\"> / </small></span>\r\n");
      out.write("\t\t\t\t\t<span style=\"opacity: 0.5\">설정</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"blog-postCategorys\"  style=\"border: 5px solid yellow;\">\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div id=\"categorys\" style=\"padding-inline-start: 0px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"pCategory\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<strong>카테고리</strong>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t");

									int count = 0;
									String cateName[] = {"aaa", "bbb"};
									//Vector<CateBean> cateVlist = new Vector<CateBean>();
									//cateVlist = cateMgr.getBlogCategory(id);
									for(int i=0; i<cateName.length; i++){
										//cateBean = cateVlist.get(i);
										//String cateName = cateBean.getBlogCateName();
										//int cateNum = cateBean.getBlogCateNum();
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"pCategory");
      out.print(i+1);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" class=\"cateChange\" name=\"category\" placeholder=\"");
      out.print(cateName[i]);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" id=\"delButton");
      out.print(i+1 );
      out.write("\" value=\"삭제\" onclick=\"delCategory('");
      out.print(i+1);
      out.write("')\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
count = i+1; 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
	} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" id=\"addButton");
      out.print(count );
      out.write("\" value=\"추가\" onclick=\"addCategory('");
      out.print(count);
      out.write("')\" style=\"margin-left: 40%; margin-top: 5px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"blog-conRight\">\r\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"수정완료\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"수정취소\" onclick=\"javascript:location.href='blog_");
      out.print(id);
      out.write(".jsp'\">\r\n");
      out.write("\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function addCategory(count) {\r\n");
      out.write("\t\r\n");
      out.write("\taddFrm = document.getElementById(\"categorys\");\r\n");
      out.write("\taddBtn = document.getElementById(\"addButton\"+count);\r\n");
      out.write("\taddFrm.removeChild(addBtn);\r\n");
      out.write("\t\r\n");
      out.write("\tcount++;\r\n");
      out.write("\t");
count+=1;
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\taddedDiv = document.createElement(\"div\");\r\n");
      out.write("\taddedDiv.setAttribute(\"class\",\"pCategory\"+count);\r\n");
      out.write("\t\r\n");
      out.write("\taddedInput = document.createElement(\"input\");\r\n");
      out.write("\taddedInput.setAttribute(\"class\",\"cateChange\");\r\n");
      out.write("\taddedInput.setAttribute(\"name\",\"category\");\r\n");
      out.write("\taddedInput.setAttribute(\"placeholder\",\"새 카테고리\");\r\n");
      out.write("\t\r\n");
      out.write("\taddedBtn = document.createElement(\"input\");\r\n");
      out.write("\taddedBtn.type = \"button\";\r\n");
      out.write("\taddedBtn.setAttribute(\"onclick\",\"delCategory(\"+count+\")\");\r\n");
      out.write("\taddedBtn.setAttribute(\"value\",\"삭제\");\r\n");
      out.write("\t\r\n");
      out.write("\taddedAddBtn = document.createElement(\"input\");\r\n");
      out.write("\taddedAddBtn.type=\"button\";\r\n");
      out.write("\taddedAddBtn.setAttribute(\"onclick\", \"addCategory(\"+count+\")\");\r\n");
      out.write("\taddedAddBtn.setAttribute(\"id\", \"addButton\"+count);\r\n");
      out.write("\taddedAddBtn.setAttribute(\"style\", \"margin-left: 40%; margin-top: 5px;\")\r\n");
      out.write("\taddedAddBtn.setAttribute(\"value\", \"추가\");\r\n");
      out.write("\t\r\n");
      out.write("\taddFrm.appendChild(addedDiv);\r\n");
      out.write("\taddedDiv.appendChild(addedInput);\r\n");
      out.write("\taddedDiv.appendChild(addedBtn);\r\n");
      out.write("\t\r\n");
      out.write("\taddFrm.appendChild(addedAddBtn);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function delCategory(count) {\r\n");
      out.write("\tdelCate = document.getElementById(\"pCategory\"+count);\r\n");
      out.write("\tdocument.getElementById(\"categorys\").removeChild(delCate);\r\n");
      out.write("\t//alert(count);\r\n");
      out.write("\t\r\n");
      out.write("\t//alert(delCate);\r\n");
      out.write("\t//delFrm.removeChild(delFrm);\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
